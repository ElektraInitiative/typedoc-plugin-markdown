// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generics: should compile class with type params 1`] = `
"[helper: breadcrumbs]

# Class: ClassWithTypeParams<T, V\\>

[partial: comment]

## Type parameters

| Name |
| :------ |
| \`T\` |
| \`V\` |

[helper: toc]

[partial: members]
"
`;

exports[`Generics: should compile function with a simple type param' 1`] = `
"▸ **functionWithTypeParam**<\`A\`\\>(): \`boolean\`

[partial: comment]

##### Type parameters

| Name |
| :------ |
| \`A\` |

##### Returns

\`boolean\`
"
`;

exports[`Generics: should compile function with complex type params' 1`] = `
"▸ **functionWithTypeParams**<\`A\`, \`B\`, \`C\`\\>(): \`boolean\`

[partial: comment]

##### Type parameters

| Name | Type | Description |
| :------ | :------ | :------ |
| \`A\` | extends [\`ClassWithTypeParams\`](ClassWithTypeParams.md)<\`string\`, \`number\`, \`A\`\\> | Comment for type \`A\` |
| \`B\` | \`string\` \\| \`boolean\` | Comment for type \`B\` |
| \`C\` | \`string\` | - |

##### Returns

\`boolean\`

[helper: returns]
"
`;

exports[`Generics: should compile generics with defaults' 1`] = `
"▸ **genericsWithDefaults**: \`void\`

[partial: comment]

#### Type parameters

| Name | Type |
| :------ | :------ |
| \`Type\` | extends \`boolean\` = \`boolean\` |

[partial: member.sources]
"
`;

exports[`Generics: should compile type with nested generics' 1`] = `
"Ƭ **nestedGenerics**: [\`Generic1\`](../modules.md#generic1)<[\`Generic2\`](../modules.md#generic2)<[\`Generic3\`](../modules.md#generic3)<\`string\`\\>\\>\\>

[partial: comment]

[partial: member.sources]
"
`;
